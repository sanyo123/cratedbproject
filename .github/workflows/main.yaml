name: Deploy

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: sanyo123/myapp
  DOCKER_TAG: latest
  K8S_NAMESPACE: myapp-ns
  K8S_DEPLOYMENT: app-deployment
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: myapp-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-hub/kubectl@master

      - name: Deploy
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: $AWS_REGION
          cluster_name: $EKS_CLUSTER_NAME
          
          
      - name: Build Docker image
        run: docker build -t sanyo123/myapp:latest .

      - name: Provide tag to image
        run: docker tag sanyo123/myappp:latest sanyo123/myapp:latest

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push lkapilcloud/myapp:latest

      - name: Set up kubectl
        uses: steebchen/kubectl@v2.0.0
        with:
          version: latest      
          
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          
      - name:  Install ingress-nginx using helm
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install nginx-ingress ingress-nginx/ingress-nginx -n nginx-ingress

      - name: Install Cert-Manager usin helm
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.13.2 --set installCRDs=tru
        

      - name: deploy to kubernetes
        run:  |
          kubectl apply -f k8s/app/namespace.yaml
          kubectl apply -f k8s/app/issuer.yaml
          kubectl apply -f k8s/app/certificate.yaml
          kubectl apply -f k8s/app/deployment.yaml
          kubectl apply -f k8s/app/service.yaml
          kubectl apply -f k8s/app/ingress.yaml
         
